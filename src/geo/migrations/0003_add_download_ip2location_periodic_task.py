# Generated by Django 5.2.3 on 2025-10-30 12:00

from django.db import migrations


def create_download_ip2location_task(apps, schema_editor):
    CrontabSchedule = apps.get_model("django_celery_beat", "CrontabSchedule")
    PeriodicTask = apps.get_model("django_celery_beat", "PeriodicTask")

    schedule, _ = CrontabSchedule.objects.get_or_create(
        minute="0",
        hour="4",
        day_of_week="1",  # Monday
        day_of_month="*",
        month_of_year="*",
        timezone="UTC",
    )

    PeriodicTask.objects.update_or_create(
        name="Download IP2Location database",
        defaults={
            "task": "geo.tasks.download_ip2location",
            "crontab": schedule,
            "enabled": True,
        },
    )


def delete_download_ip2location_task(apps, schema_editor):
    PeriodicTask = apps.get_model("django_celery_beat", "PeriodicTask")

    try:
        task = PeriodicTask.objects.get(name="Download IP2Location database")
        task.delete()
    except PeriodicTask.DoesNotExist:
        pass  # Task already gone, nothing to do


class Migration(migrations.Migration):

    dependencies = [
        ('geo', '0002_load_cities'),
        ("django_celery_beat", "0019_alter_periodictasks_options"),
    ]

    operations = [
        migrations.RunPython(create_download_ip2location_task, reverse_code=delete_download_ip2location_task),
    ]

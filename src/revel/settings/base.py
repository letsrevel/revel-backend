"""Django settings for revel project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

from decouple import Csv, config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parents[2]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")
SALT_KEY = config("SALT_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", default=False, cast=bool)
DEMO_MODE = config("DEMO_MODE", default=DEBUG, cast=bool)

ALLOWED_HOSTS: list[str] = config("ALLOWED_HOSTS", cast=Csv(), default="localhost,127.0.0.1")

SILK_PROFILER = config("SILK_PROFILER", default=False, cast=bool)

# Application definition

INSTALLED_APPS = [
    "unfold",  # needs to be at the top
    "unfold.contrib.filters",
    "unfold.contrib.forms",
    "unfold.contrib.inlines",
    "unfold.contrib.guardian",
    "unfold.contrib.simple_history",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "django.contrib.gis",
    # third party
    "corsheaders",
    "solo",
    "simple_history",
    "django_google_sso",
    "django_celery_results",
    "django_celery_beat",
    "ninja_jwt",
    "ninja_jwt.token_blacklist",
    "ninja_extra",
    # custom
    "api",
    "accounts",
    "common",
    "events",
    "questionnaires",
    "telegram",
    "geo",
]

if SILK_PROFILER:
    INSTALLED_APPS += ["silk"]


SITE_ID = 1
SITE_NAME = config("SITE_NAME", default="Revel")
BASE_URL = config("BASE_URL", default="https://revel.biagiodistefano.io")
FRONTEND_BASE_URL = config("FRONTEND_BASE_URL", default="http://localhost:3000")


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "geo.middleware.GeoPointMiddleware",
]

if SILK_PROFILER:
    MIDDLEWARE += ["silk.middleware.SilkyMiddleware"]


ROOT_URLCONF = "revel.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "revel.wsgi.application"
ASGI_APPLICATION = "revel.asgi.application"

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

_postgres_db = {
    "ENGINE": "django.contrib.gis.db.backends.postgis",
    "NAME": config("DB_NAME", "revel"),
    "USER": config("DB_USER", "revel"),
    "PASSWORD": config("DB_PASSWORD", "revel-password"),
    "HOST": config("DB_HOST", "localhost"),
    "PORT": config("DB_PORT", "5432"),
    "CONN_MAX_AGE": config("DB_CONN_MAX_AGE", cast=int, default=300),
    "CONN_HEALTH_CHECKS": config("DB_CONN_HEALTH_CHECKS", cast=bool, default=True),
    "OPTIONS": {
        "connect_timeout": 5,
    },
}

_sqlite_db = {
    "ENGINE": "django.db.backends.sqlite3",
    "NAME": BASE_DIR / "db.sqlite3",
}

default_db = _postgres_db

DATABASES = {"default": default_db}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
    {
        "NAME": "accounts.password_validation.ComplexPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Europe/Vienna"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "static/"
STATICFILES_DIRS = [
    BASE_DIR / "staticfiles",
]

if DEBUG:
    DEFAULT_STORAGE_BACKEND = "django.core.files.storage.FileSystemStorage"
else:
    DEFAULT_STORAGE_BACKEND = "storages.backends.s3boto3.S3Boto3Storage"


STORAGES = {
    "default": {"BACKEND": DEFAULT_STORAGE_BACKEND},
    "staticfiles": {"BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage"},
}

MEDIA_ROOT = BASE_DIR / "media"
MEDIA_URL = "/media/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
AUTH_USER_MODEL = "accounts.RevelUser"

# ACCOUNTS
ACCOUNT_OTP_EXPIRATION_MINUTES = config("ACCOUNT_OTP_EXPIRATION_MINUTES", cast=int, default=5)


REDIS_HOST = config("REDIS_HOST", default="localhost")
REDIS_PORT = config("REDIS_PORT", cast=int, default=6379)

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.redis.RedisCache",
        "LOCATION": f"redis://{REDIS_HOST}:{REDIS_PORT}",
    }
}


# GENERAL
_version_path = BASE_DIR.parent / "version"


VERSION = _version_path.read_text().strip()
API_DOCS_URL: str | None = "/docs"

SITE_DOMAIN = config("SITE_DOMAIN", default="localhost")
SITE_NAME = config("SITE_NAME", default="Revel")

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_ALL_ORIGINS = True
_proto = "http" if DEBUG else "https"
CSRF_TRUSTED_ORIGINS = [f"{_proto}://{SITE_DOMAIN}"]
SERVICE_URL = CSRF_TRUSTED_ORIGINS[0]
SERVICE_URL += ":8000" if "localhost" in SERVICE_URL else ""
SERVICE_DESCRIPTION = config("SERVICE_DESCRIPTION", default="The Revel API")
ADMIN_URL = config("ADMIN_URL", default="admin/")


# OTP
TOTP_ISSUER_NAME = config("TOTP_ISSUER_NAME", default="Revel")


# OPENAI
OPENAI_API_KEY = config("OPENAI_API_KEY", default="fake-key")


# DATA UPLOADS
DATA_UPLOAD_MAX_MEMORY_SIZE = 5 * 1024 * 1024  # 5MB


CLAMAV_HOST = config("CLAMAV_HOST", default="localhost")
CLAMAV_PORT = config("CLAMAV_PORT", default=3310, cast=int)
